[{"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\index.js":"1","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\App.js":"2","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\StateProvider.js":"3","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\reducer.js":"4","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Payment.js":"5","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Orders.js":"6","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Header.js":"7","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Home.js":"8","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\ProductDetails.js":"9","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\firebase.js":"10","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Login.js":"11","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Checkout.js":"12","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Order.js":"13","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\axios.js":"14","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\CheckoutProduct.js":"15","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Product.js":"16","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Subtotal.js":"17","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Invoice.js":"18","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Delivery.js":"19"},{"size":514,"mtime":1608380102841,"results":"20","hashOfConfig":"21"},{"size":2768,"mtime":1608862488562,"results":"22","hashOfConfig":"21"},{"size":485,"mtime":1608292265892,"results":"23","hashOfConfig":"21"},{"size":1227,"mtime":1608292265894,"results":"24","hashOfConfig":"21"},{"size":5286,"mtime":1608935484796,"results":"25","hashOfConfig":"21"},{"size":1410,"mtime":1608627683890,"results":"26","hashOfConfig":"21"},{"size":2013,"mtime":1608455920464,"results":"27","hashOfConfig":"21"},{"size":7216,"mtime":1608489443512,"results":"28","hashOfConfig":"21"},{"size":347,"mtime":1608489655649,"results":"29","hashOfConfig":"21"},{"size":669,"mtime":1608290899203,"results":"30","hashOfConfig":"21"},{"size":2137,"mtime":1608862475296,"results":"31","hashOfConfig":"21"},{"size":1406,"mtime":1608378645855,"results":"32","hashOfConfig":"21"},{"size":1256,"mtime":1608581566994,"results":"33","hashOfConfig":"21"},{"size":204,"mtime":1608394716957,"results":"34","hashOfConfig":"21"},{"size":1351,"mtime":1608378645880,"results":"35","hashOfConfig":"21"},{"size":1431,"mtime":1608489619649,"results":"36","hashOfConfig":"21"},{"size":1261,"mtime":1608761305071,"results":"37","hashOfConfig":"21"},{"size":6687,"mtime":1608902530142,"results":"38","hashOfConfig":"21"},{"size":3137,"mtime":1608934488441,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"83lmhw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\index.js",[],["91","92"],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\App.js",["93"],"import React, { useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Checkout from \"./components/Checkout\";\r\nimport Login from \"./components/Login\";\r\nimport Orders from \"./components/Orders\";\r\nimport Payment from \"./components/Payment\";\r\nimport Delivery from \"./components/Delivery\";\r\nimport Invoice from \"./components/Invoice\";\r\nimport ProductDetails from \"./components/ProductDetails\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\nimport { useStateValue } from \"./components/StateProvider\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst promise = loadStripe(\r\n  \"pk_test_51HzmHQI3pvAPJEPtmot3q4jat6cFVxH2LRRyXIckr3m8K0lKoIYSkPvAUbI6vIf7wcXkCfN87GthqJKTT4kNs8QG00yWgopQAf\"\r\n);\r\n\r\nfunction App() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    //firebase listener\r\n    //will only run once when th app component loads...like an if stmt in React\r\n\r\n    auth.onAuthStateChanged((authUser) => {\r\n      // console.log(\"The user is >> \", authUser);\r\n\r\n      if (authUser) {\r\n        //the user just logged in / the user was logged in\r\n        //everytime a user logs in the data is dipatched to the data layer\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser,\r\n        });\r\n      } else {\r\n        //the user is logged out\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null,\r\n        });\r\n      }\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/productDetails/:id\" component={ProductDetails} />\r\n\r\n          <Route path=\"/invoice/:id\" component={Invoice} />\r\n\r\n          <Route path=\"/orders\">\r\n            <Header />\r\n            <Orders />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n\r\n          {/* <Route path=\"/productDetails\">\r\n            <Header />\r\n            <ProductDetails />\r\n          </Route> */}\r\n\r\n          <Route path=\"/checkout\">\r\n            <Header />\r\n            <Checkout />\r\n          </Route>\r\n\r\n          <Route path=\"/delivery\">\r\n            <Header />\r\n            <Delivery />\r\n          </Route>\r\n\r\n          <Route path=\"/payment\">\r\n            <Header />\r\n            <Elements stripe={promise}>\r\n              <Payment />\r\n            </Elements>\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Header />\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\StateProvider.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\reducer.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Payment.js",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [userData, setUserData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // generate the special stripe secret which allows us to charge a customer\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        // Stripe expects the total in a currencies subunits\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n//   console.log('THE SECRET IS >>>', clientSecret)\r\n//   console.log('👱', user)\r\n\r\n  const handleSubmit = async (event) => {\r\n    // do all the fancy stripe stuff...\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  if (user) {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .onSnapshot((doc) => {\r\n        setUserData(doc.data());\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n\r\n        {/* Payment section - delivery address */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment__address\">\r\n            <p><b>{userData?.name}</b></p>\r\n            <p>{userData?.address?.area}</p>\r\n            <p>{userData?.address?.city +\" , \"+ userData?.address?.state  +\" - \"+ userData?.address?.pincode}</p>\r\n            <p>{userData?.email}</p>\r\n            <p>{userData?.phone}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Review Items */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Payment method */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* Stripe magic will go */}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"₹\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Errors */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Orders.js",["95","96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Orders.css\";\r\nimport Order from \"./Order\";\r\nimport { db } from \"../firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Orders() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\") //look for users collection(table)\r\n        .doc(user?.uid) //in that select a specific user with the uid same as that of logged in user\r\n        .collection(\"orders\") //collect that user's orders collection(table)\r\n        .orderBy(\"created\", \"desc\") //arrange all his orders in desc order based on date created\r\n        .onSnapshot((\r\n          snapshot //get a realtime snapshot of the query\r\n        ) =>\r\n          setOrders(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id, //and map through it to get each order id n its corressponding data\r\n              data: doc.data(), //and store it in orders object using setorders func (useState hook)\r\n            }))\r\n          )\r\n        );\r\n    } else {\r\n      setOrders([]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <h1>Your Orders</h1>\r\n\r\n      <div className=\"orders-order\">\r\n        {orders?.map((order) => (\r\n          <Order order={order} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Header.js",["98"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../media/logo.png\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"../firebase\";\r\n\r\nfunction Header() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n  const handleAuthentication = () => {\r\n    if (user) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {/* LOGO */}\r\n      <Link to=\"/\">\r\n        <img className=\"header-logo\" src={logo} alt=\"brand-logo\" />\r\n      </Link>\r\n\r\n      {/* HEADER SEARCH BAR */}\r\n      <div className=\"header-search\">\r\n        <input className=\"header-search-input\" type=\"text\" />\r\n        <SearchIcon className=\"header-search-icon\" />\r\n      </div>\r\n\r\n      {/* HEADER NAVBAR */}\r\n      <div className=\"header-nav\">\r\n\r\n        <Link to={!user && \"/login\"}>\r\n          <div onClick={handleAuthentication} className=\"header-option\">\r\n            <span className=\"line-one\">\r\n              Hello {!user ? \"Guest\" : user.email}\r\n            </span>\r\n            <span className=\"line-two\">{user ? \"Sign Out\" : \"Sign In\"}</span>\r\n          </div>\r\n        </Link>\r\n\r\n        <Link to=\"/orders\">\r\n          <div className=\"header-option\">\r\n            <span className=\"line-one\">Returns</span>\r\n            <span className=\"line-two\">& Orders</span>\r\n          </div>\r\n        </Link>\r\n\r\n        {/* <div className=\"header-option\">\r\n          <span className=\"line-one\">Your</span>\r\n          <span className=\"line-two\">Prime</span>\r\n        </div> */}\r\n\r\n        <Link to=\"/checkout\">\r\n          <div className=\"header-option-basket\">\r\n            <ShoppingCartIcon />\r\n            <span className=\"header-option-basketcount line-two\"></span>\r\n            {basket?.length}\r\n          </div>\r\n        </Link>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Home.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\ProductDetails.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\firebase.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Login.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Checkout.js",["99"],"import React from 'react';\r\nimport \"./Checkout.css\";\r\nimport \"./Subtotal\";\r\nimport Subtotal from \"./Subtotal\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\n\r\nfunction Checkout() {\r\n\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n               <img className=\"checkout__ad\"\r\n               src=\"https://images-na.ssl-images-amazon.com/images/G/01/img13/computers-pc-hardware/other/3-11_pc-147-logitech-900x120._CB485928679_.gif\"\r\n               alt=\"\"\r\n               />\r\n               <div>\r\n                    <h3>Hello, {user?.email}</h3>\r\n                   <h2 className=\"checkout__title\">Your shopping Basket</h2>\r\n\r\n                    {basket.map(item => (\r\n                        <CheckoutProduct\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                        \r\n                    ))}\r\n                    \r\n               </div>\r\n            </div>\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Order.js",["100"],"import React from \"react\";\r\nimport \"./Order.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport moment from \"moment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Order({ order }) {\r\n\r\n  const newTo = {\r\n    pathname: \"/invoice/${order.id}\",\r\n    order: order\r\n  };\r\n\r\n  return (\r\n    <div className=\"order\">\r\n      <h2>Order</h2>\r\n      <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\r\n      <p className=\"order-id\">\r\n        <small>{order.id}</small>\r\n      </p>\r\n      {order.data.basket?.map((item) => (\r\n        <CheckoutProduct\r\n          id={item.id}\r\n          title={item.title}\r\n          image={item.image}\r\n          price={item.price}\r\n          rating={item.rating}\r\n          hideButton\r\n        />\r\n      ))}\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <h3 className=\"order-total\">Order Total: {value}</h3>\r\n        )}\r\n        decimalScale={2}\r\n        value={order.data.amount / 100}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"₹\"}\r\n      />\r\n      <Link to={newTo}><button className=\"btn btn-success\">See Invoice</button></Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\axios.js",[],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\CheckoutProduct.js",["101","102"],"import React from \"react\";\r\nimport './CheckoutProduct.css';\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction CheckoutProduct({id, image, title, price, rating, hideButton}) {\r\n    const [{basket}, dispatch] = useStateValue();\r\n\r\n    const removeFromBasket = () => {\r\n        // remove the item from the basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id: id,\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct__image\" src={image} />\r\n\r\n            <div className=\"checkoutProduct__info\">\r\n\r\n                <p className=\"checkoutProduct__title\"> {title} </p>\r\n                <p className=\"checkoutProduct__price\"> \r\n                     <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n\r\n                    <div className=\"checkoutProduct__rating\">\r\n                        {Array(rating)\r\n                        .fill()\r\n                        .map((_, i) => (\r\n                            <p>⭐</p>\r\n                        ))}\r\n                    </div>\r\n                    {!hideButton && (\r\n                        <button onClick={removeFromBasket}>Remove from Basket</button>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct;","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Product.js",["103","104"],"import React from \"react\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Product({ id, title, price, image, rating, desc }) {\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  //console.log(\"this is the basket>>>\");\r\n\r\n  const addToBasket = () => {\r\n    //dispatch the item into the data layer\r\n    dispatch({\r\n      type: \"ADD_TO_BASKET\",\r\n      item: {\r\n        id: id,\r\n        title: title,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n      },\r\n    });\r\n  };\r\n\r\n  const newTo = {\r\n    pathname: \"/productDetails/${id}\",\r\n    id: id,\r\n    title: title,\r\n    image: image,\r\n    price: price,\r\n    rating: rating,\r\n    desc: desc\r\n  };\r\n\r\n  return (\r\n    \r\n      <div className=\"product\">\r\n        <div className=\"product-info\">\r\n          <p>{title}</p>\r\n          <p className=\"product-price\">\r\n            <small>₹</small>\r\n            <strong>{price}</strong>\r\n          </p>\r\n          <div className=\"product-rating\">\r\n            {Array(rating)\r\n              .fill()\r\n              .map((_, i) => (\r\n                <p>⭐</p>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        <img src={image} alt=\"product\" />\r\n\r\n        <button onClick={addToBasket}>Add to Basket</button>\r\n        <Link to={newTo}><button>More Details</button></Link>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n",["105","106"],"C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Subtotal.js",["107"],"import React from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { getBasketTotal } from \"./reducer\";\r\n//import { getBasketTotal } from \"./StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Subtotal() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    return(\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                <>\r\n                    <p>\r\n                        Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                    </p>\r\n                        <small className=\"subtotal__gift\">\r\n                        <input type=\"checkbox\" /> This order contains a gift\r\n                    </small>\r\n                </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)} \r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"₹\"}\r\n            />\r\n            <button onClick={e => history.push(\"./delivery\")}>Proceed to Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal;","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Invoice.js",["108","109","110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Invoice.css\";\r\nimport logo from \"../media/logo2.png\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction Invoice(props) {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const order = props.location.order;\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n    if (user) {\r\n      db.collection(\"users\")\r\n        .doc(user?.uid)\r\n        .onSnapshot((doc) => {\r\n          setUserData(doc.data());\r\n        });\r\n    }\r\n  // }, []);\r\n\r\n  // console.log(\"Current data: \", userData.address?.area);\r\n\r\n  if (!user) {\r\n    history.replace(\"/\");\r\n    // <Redirect to=\"/\" />\r\n  }\r\n\r\n  function printFunction() {\r\n    window.print();\r\n  }\r\n\r\n  return (\r\n    <div className=\"invoice\">\r\n      <div class=\"receipt-content\">\r\n        <div class=\"container bootstrap snippets bootdey\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"invoice-wrapper\">\r\n                <div className=\"invoice-header\">\r\n                  {/* <img className=\"header-logo\" src={logo} alt=\"brand-logo\" /> */}\r\n                  <h1>INVOICE</h1>\r\n                  {/* <p>Invoice No: <br/> \r\n                  <strong>#1</strong>\r\n                  </p> */}\r\n                </div>\r\n                <div className=\"invoice-content\">\r\n                  <div class=\"intro\">\r\n                    Hi <strong>{userData?.name}</strong>,\r\n                    <br />\r\n                    This is the receipt for a payment of{\" \"}\r\n                    <strong>₹{order.data.amount / 100}</strong> for your order\r\n                    at EShoppers.\r\n                  </div>\r\n\r\n                  <div class=\"payment-info\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <span>Order Id.</span>\r\n                        <strong>{order.id}</strong>\r\n                      </div>\r\n                      <div class=\"col-sm-6 text-right\">\r\n                        <span>Payment Date</span>\r\n                        <strong>\r\n                          {moment\r\n                            .unix(order.data.created)\r\n                            .format(\"MMMM Do YYYY, h:mma\")}\r\n                        </strong>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"payment-details\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <span>Shipping Details</span>\r\n                        <strong>{userData.name}</strong>\r\n                        <p>\r\n                          {userData.address?.area} <br />\r\n                          {userData.address?.city} <br />\r\n                          {userData.address?.state} <br />\r\n                          {userData.address?.country} <br />\r\n                          {userData.address?.pincode} <br />\r\n                          Phone : {userData.phone}\r\n                          <br />\r\n                          Email : {user.email}\r\n                          <br />\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"col-sm-6 text-right\">\r\n                        <span>Payment To</span>\r\n                        <strong>EShoppers Pvt. Ltd.</strong>\r\n                        <p>\r\n                          UVCE, K.R. Circle <br />\r\n                          Bangalore <br />\r\n                          Karnataka <br />\r\n                          560001 <br />\r\n                          9123456789 <br />\r\n                          <a href=\"mailto:eshoppers@gmail.com\">\r\n                            eshoppers@gmail.com\r\n                          </a>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"line-items\">\r\n                    <div>\r\n                      <table class=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th class=\"center\">#</th>\r\n                            <th>Product</th>\r\n                            <th class=\"hidden-xs\">Description</th>\r\n                            {/* <th class=\"hidden-480\">Discount</th> */}\r\n                            <th>Total</th>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {order.data.basket?.map((item) => (\r\n                            <tr>\r\n                              <td class=\"center\">1</td>\r\n                              <td>\r\n                                <a href=\"#\">{item.title}</a>\r\n                              </td>\r\n                              <td class=\"hidden-xs\">{item.title}</td>\r\n                              {/* <td class=\"hidden-480\"> --- </td> */}\r\n                              <td>₹{item.price}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <div class=\"total text-right\">\r\n                      <p class=\"extra-notes\">\r\n                        <p>\r\n                          <strong>Order Status : </strong> Order placed\r\n                        </p>\r\n                        <p>\r\n                          <strong>Payment Status : </strong> Payment completed\r\n                          successfully\r\n                        </p>\r\n                      </p>\r\n                      <div class=\"field\">\r\n                        Subtotal <span>₹{order.data.amount / 100}</span>\r\n                      </div>\r\n                      <div class=\"field\">\r\n                        Shipping <span>₹0.00</span>\r\n                      </div>\r\n                      <div class=\"field grand-total\">\r\n                        Total <span>₹{order.data.amount / 100}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"print\">\r\n                      <a href=\"#\" onClick={printFunction}>\r\n                        <i class=\"fas fa-print\"></i>\r\n                        Print this receipt\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"footer\">Copyright © 2020. EShoppers Pvt. Ltd.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Invoice;\r\n","C:\\Users\\shiva\\Desktop\\eshoppers\\src\\components\\Delivery.js",["115","116"],"import React, { useState } from \"react\";\r\nimport \"./Delivery.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction Delivery() {\r\n  const history = useHistory();\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  if (user) {\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .onSnapshot((doc) => {\r\n        setUserData(doc.data());\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"the event is \", event.target.name.value);\r\n    db.collection(\"users\")\r\n      .doc(user?.uid)\r\n      .set({                                  //overwrites the data if present or not\r\n        name: event.target.name.value,\r\n        email: event.target.email.value,\r\n        phone: event.target.phone.value,\r\n        address:{\r\n          area: event.target.area.value,\r\n          city: event.target.city.value,\r\n          state: event.target.state.value,\r\n          country: event.target.country.value,\r\n          pincode: event.target.pincode.value\r\n        }\r\n      });\r\n\r\n    // history.replace('/orders')\r\n    history.push(\"./payment\");\r\n  };\r\n\r\n  //console.log(\"here is \", userData);\r\n\r\n  return (\r\n    <div className=\"delivery\">\r\n      <h1>Add Your Delivery Address</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Name : </label>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your name\"\r\n          defaultValue={userData?.name}\r\n        />{\" \"}\r\n        <br />\r\n        <label>Delivery Address : </label>\r\n        <br />\r\n        <label>Area : </label>\r\n        <input\r\n          name=\"area\"\r\n          placeholder=\"Enter your area\"\r\n          defaultValue={userData?.address?.area}\r\n        />\r\n        <label>City : </label>\r\n        <input\r\n          name=\"city\"\r\n          placeholder=\"Enter your city\"\r\n          defaultValue={userData?.address?.city}\r\n        />\r\n        <label>State : </label>\r\n        <input\r\n          name=\"state\"\r\n          placeholder=\"Enter your state\"\r\n          defaultValue={userData?.address?.state}\r\n        />\r\n        <label>Country : </label>\r\n        <input\r\n          name=\"country\"\r\n          placeholder=\"Enter your country\"\r\n          defaultValue={userData?.address?.country}\r\n        />\r\n        <label>Pincode : </label>\r\n        <input\r\n          name=\"pincode\"\r\n          placeholder=\"Enter your pincode\"\r\n          defaultValue={userData?.address?.pincode}\r\n        />\r\n        <br />\r\n        <label>Email : </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          defaultValue={userData?.email}\r\n        />\r\n        <br />\r\n        <label>Phone : </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Enter your phone\"\r\n          defaultValue={userData?.phone}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Proceed to Payment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Delivery;\r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":23,"column":10,"nodeType":"123","messageId":"124","endLine":23,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":48,"column":11,"nodeType":"127","messageId":"128","endLine":48,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":8,"column":12,"nodeType":"127","messageId":"128","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"130","line":8,"column":28,"nodeType":"127","messageId":"128","endLine":8,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":30,"column":6,"nodeType":"133","endLine":30,"endColumn":8,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"130","line":11,"column":28,"nodeType":"127","messageId":"128","endLine":11,"endColumn":36},{"ruleId":"125","severity":1,"message":"130","line":10,"column":28,"nodeType":"127","messageId":"128","endLine":10,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":11,"column":15,"nodeType":"137","messageId":"138","endLine":11,"endColumn":37},{"ruleId":"125","severity":1,"message":"129","line":6,"column":13,"nodeType":"127","messageId":"128","endLine":6,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":19,"column":13,"nodeType":"141","endLine":19,"endColumn":67},{"ruleId":"125","severity":1,"message":"129","line":7,"column":12,"nodeType":"127","messageId":"128","endLine":7,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":26,"column":15,"nodeType":"137","messageId":"138","endLine":26,"endColumn":38},{"ruleId":"117","replacedBy":"142"},{"ruleId":"119","replacedBy":"143"},{"ruleId":"125","severity":1,"message":"130","line":13,"column":24,"nodeType":"127","messageId":"128","endLine":13,"endColumn":32},{"ruleId":"125","severity":1,"message":"144","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"145","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":12},{"ruleId":"125","severity":1,"message":"146","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":10,"column":12,"nodeType":"127","messageId":"128","endLine":10,"endColumn":18},{"ruleId":"125","severity":1,"message":"130","line":10,"column":28,"nodeType":"127","messageId":"128","endLine":10,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":128,"column":33,"nodeType":"141","endLine":128,"endColumn":45},{"ruleId":"147","severity":1,"message":"148","line":160,"column":23,"nodeType":"141","endLine":160,"endColumn":59},{"ruleId":"125","severity":1,"message":"129","line":9,"column":12,"nodeType":"127","messageId":"128","endLine":9,"endColumn":18},{"ruleId":"125","severity":1,"message":"130","line":9,"column":28,"nodeType":"127","messageId":"128","endLine":9,"endColumn":36},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["149"],["150"],"'useEffect' is defined but never used.","'logo' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [user]",{"range":"154","text":"155"},[1148,1150],"[user]"]